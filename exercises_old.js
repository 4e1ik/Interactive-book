// JavaScript –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π

document.addEventListener('DOMContentLoaded', function() {
    initExercisesPage();
});

function initExercisesPage() {
    initExerciseNavigation();
    initQuizSystem();
    initGames();
    initPuzzles();
    initModal();
}

// –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ç–∏–ø–∞–º —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π
function initExerciseNavigation() {
    const navButtons = document.querySelectorAll('.exercise-nav-btn');
    const exerciseSections = document.querySelectorAll('.exercise-section');
    
    navButtons.forEach(button => {
        button.addEventListener('click', function() {
            const targetType = this.dataset.type;
            
            // –£–¥–∞–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —Å–æ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫ –∏ —Å–µ–∫—Ü–∏–π
            navButtons.forEach(btn => btn.classList.remove('active'));
            exerciseSections.forEach(section => section.classList.remove('active'));
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–µ –∏ —Å–µ–∫—Ü–∏–∏
            this.classList.add('active');
            document.getElementById(targetType).classList.add('active');
        });
    });
}

// –°–∏—Å—Ç–µ–º–∞ –≤–∏–∫—Ç–æ—Ä–∏–Ω
function initQuizSystem() {
    const startButtons = document.querySelectorAll('.start-quiz');
    
    startButtons.forEach(button => {
        button.addEventListener('click', function() {
            const quizType = this.dataset.quiz;
            startQuiz(quizType);
        });
    });
}

// –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–∫—Ç–æ—Ä–∏–Ω
const quizData = {
    patriotism: {
        title: "–ü–∞—Ç—Ä–∏–æ—Ç–∏–∑–º –∏ –†–æ–¥–∏–Ω–∞",
        questions: [
            {
                question: "–ö–∞–∫–æ–π —Ü–≤–µ—Ç –ù–ï –≤—Ö–æ–¥–∏—Ç –≤ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–π —Ñ–ª–∞–≥ –ë–µ–ª–∞—Ä—É—Å–∏?",
                answers: ["–ö—Ä–∞—Å–Ω—ã–π", "–ó–µ–ª–µ–Ω—ã–π", "–ë–µ–ª—ã–π", "–°–∏–Ω–∏–π"],
                correct: 3
            },
            {
                question: "–°—Ç–æ–ª–∏—Ü–∞ –†–µ—Å–ø—É–±–ª–∏–∫–∏ –ë–µ–ª–∞—Ä—É—Å—å:",
                answers: ["–ì—Ä–æ–¥–Ω–æ", "–ú–∏–Ω—Å–∫", "–ë—Ä–µ—Å—Ç", "–í–∏—Ç–µ–±—Å–∫"],
                correct: 1
            },
            {
                question: "–ö–æ–≥–¥–∞ –æ—Ç–º–µ—á–∞–µ—Ç—Å—è –î–µ–Ω—å –ù–µ–∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ë–µ–ª–∞—Ä—É—Å–∏?",
                answers: ["3 –∏—é–ª—è", "25 –º–∞—Ä—Ç–∞", "7 –Ω–æ—è–±—Ä—è", "1 –º–∞—è"],
                correct: 0
            },
            {
                question: "–ö—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –≥–ª–∞–≤–æ–π –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–∞ –≤ –ë–µ–ª–∞—Ä—É—Å–∏?",
                answers: ["–ü—Ä–µ–º—å–µ—Ä-–º–∏–Ω–∏—Å—Ç—Ä", "–ü—Ä–µ–∑–∏–¥–µ–Ω—Ç", "–°–ø–∏–∫–µ—Ä –ø–∞—Ä–ª–∞–º–µ–Ω—Ç–∞", "–ú–∏–Ω–∏—Å—Ç—Ä"],
                correct: 1
            },
            {
                question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —Å–ª–æ–≤–æ '–ø–∞—Ç—Ä–∏–æ—Ç–∏–∑–º'?",
                answers: ["–õ—é–±–æ–≤—å –∫ –†–æ–¥–∏–Ω–µ", "–ó–Ω–∞–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏", "–°–æ–±–ª—é–¥–µ–Ω–∏–µ –∑–∞–∫–æ–Ω–æ–≤", "–í—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–µ"],
                correct: 3
            }
        ]
    },
    rights: {
        title: "–ü—Ä–∞–≤–∞ –∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏",
        questions: [
            {
                question: "–° –∫–∞–∫–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω –ë–µ–ª–∞—Ä—É—Å–∏ –º–æ–∂–µ—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –≤—ã–±–æ—Ä–∞—Ö?",
                answers: ["16 –ª–µ—Ç", "18 –ª–µ—Ç", "21 –≥–æ–¥", "25 –ª–µ—Ç"],
                correct: 1
            },
            {
                question: "–ö–∞–∫–æ–µ –ø—Ä–∞–≤–æ —è–≤–ª—è–µ—Ç—Å—è –æ—Å–Ω–æ–≤–Ω—ã–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω–∞?",
                answers: ["–ü—Ä–∞–≤–æ –Ω–∞ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ", "–ü—Ä–∞–≤–æ –Ω–∞ —Ç—Ä—É–¥", "–ü—Ä–∞–≤–æ –Ω–∞ –∂–∏–∑–Ω—å", "–í—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–µ"],
                correct: 3
            },
            {
                question: "–û–±—è–∑–∞–Ω –ª–∏ –≥—Ä–∞–∂–¥–∞–Ω–∏–Ω –ø–ª–∞—Ç–∏—Ç—å –Ω–∞–ª–æ–≥–∏?",
                answers: ["–î–∞, —ç—Ç–æ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç—å", "–ù–µ—Ç, —ç—Ç–æ –ø—Ä–∞–≤–æ", "–¢–æ–ª—å–∫–æ –ø–æ –∂–µ–ª–∞–Ω–∏—é", "–¢–æ–ª—å–∫–æ –¥–ª—è –±–æ–≥–∞—Ç—ã—Ö"],
                correct: 0
            },
            {
                question: "–ß—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç '–≥—Ä–∞–∂–¥–∞–Ω—Å–∫–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å'?",
                answers: ["–ó–Ω–∞–Ω–∏–µ –∑–∞–∫–æ–Ω–æ–≤", "–ê–∫—Ç–∏–≤–Ω–æ–µ —É—á–∞—Å—Ç–∏–µ –≤ –∂–∏–∑–Ω–∏ –æ–±—â–µ—Å—Ç–≤–∞", "–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π", "–í—Å–µ –ø–µ—Ä–µ—á–∏—Å–ª–µ–Ω–Ω–æ–µ"],
                correct: 3
            }
        ]
    },
    constitution: {
        title: "–ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏—è –†–ë",
        questions: [
            {
                question: "–ö–æ–≥–¥–∞ –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞ –¥–µ–π—Å—Ç–≤—É—é—â–∞—è –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏—è –ë–µ–ª–∞—Ä—É—Å–∏?",
                answers: ["1991 –≥–æ–¥", "1994 –≥–æ–¥", "1996 –≥–æ–¥", "2000 –≥–æ–¥"],
                correct: 2
            },
            {
                question: "–°–∫–æ–ª—å–∫–æ —Ä–∞–∑–¥–µ–ª–æ–≤ –≤ –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏ –ë–µ–ª–∞—Ä—É—Å–∏?",
                answers: ["6", "8", "9", "10"],
                correct: 2
            },
            {
                question: "–ß—Ç–æ —è–≤–ª—è–µ—Ç—Å—è –≤—ã—Å—à–µ–π —Ü–µ–Ω–Ω–æ—Å—Ç—å—é –≤ –ö–æ–Ω—Å—Ç–∏—Ç—É—Ü–∏–∏?",
                answers: ["–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ", "–ß–µ–ª–æ–≤–µ–∫", "–ü—Ä–∞–≤–æ", "–°–æ–±—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å"],
                correct: 1
            }
        ]
    },
    history: {
        title: "–ò—Å—Ç–æ—Ä–∏—è –ë–µ–ª–∞—Ä—É—Å–∏",
        questions: [
            {
                question: "–í –∫–∞–∫–æ–º –≥–æ–¥—É –ë–µ–ª–∞—Ä—É—Å—å —Å—Ç–∞–ª–∞ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–æ–º?",
                answers: ["1990", "1991", "1992", "1993"],
                correct: 1
            },
            {
                question: "–ö—Ç–æ –±—ã–ª –ø–µ—Ä–≤—ã–º –ø—Ä–µ–∑–∏–¥–µ–Ω—Ç–æ–º –ë–µ–ª–∞—Ä—É—Å–∏?",
                answers: ["–ê–ª–µ–∫—Å–∞–Ω–¥—Ä –õ—É–∫–∞—à–µ–Ω–∫–æ", "–°—Ç–∞–Ω–∏—Å–ª–∞–≤ –®—É—à–∫–µ–≤–∏—á", "–í—è—á–µ—Å–ª–∞–≤ –ö–µ–±–∏—á", "–ó–µ–Ω–æ–Ω –ü–æ–∑–Ω—è–∫"],
                correct: 1
            },
            {
                question: "–ö–∞–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ –ø—Ä–æ–∏–∑–æ—à–ª–æ –≤ 1941-1944 –≥–æ–¥–∞—Ö –Ω–∞ —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏–∏ –ë–µ–ª–∞—Ä—É—Å–∏?",
                answers: ["–ì—Ä–∞–∂–¥–∞–Ω—Å–∫–∞—è –≤–æ–π–Ω–∞", "–í–µ–ª–∏–∫–∞—è –û—Ç–µ—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≤–æ–π–Ω–∞", "–ü–µ—Ä–≤–∞—è –º–∏—Ä–æ–≤–∞—è –≤–æ–π–Ω–∞", "–†–µ–≤–æ–ª—é—Ü–∏—è"],
                correct: 1
            }
        ]
    }
};

// –ó–∞–ø—É—Å–∫ –≤–∏–∫—Ç–æ—Ä–∏–Ω—ã
function startQuiz(quizType) {
    const quiz = quizData[quizType];
    if (!quiz) return;
    
    const modal = document.getElementById('quiz-modal');
    const container = document.getElementById('quiz-container');
    
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä QuizManager
    const quizManager = new QuizManager(container);
    quizManager.loadQuestions(quiz.questions);
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
    modal.style.display = 'block';
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const closeBtn = modal.querySelector('.close');
    closeBtn.onclick = function() {
        modal.style.display = 'none';
    };
    
    window.onclick = function(event) {
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    };
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä
function initGames() {
    initFlagGame();
    initMemoryGame();
}

// –ò–≥—Ä–∞ "–°–æ–±–µ—Ä–∏ —Ñ–ª–∞–≥"
function initFlagGame() {
    const elements = document.querySelectorAll('.flag-element');
    const targets = document.querySelectorAll('.flag-stripe');
    
    elements.forEach(element => {
        element.addEventListener('dragstart', function(e) {
            e.dataTransfer.setData('text/plain', this.dataset.color);
        });
    });
    
    targets.forEach(target => {
        target.addEventListener('dragover', function(e) {
            e.preventDefault();
        });
        
        target.addEventListener('drop', function(e) {
            e.preventDefault();
            const color = e.dataTransfer.getData('text/plain');
            
            if (color === this.dataset.target) {
                this.style.backgroundColor = getColorValue(color);
                this.textContent = getColorName(color);
                showNotification('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!', 'success');
            } else {
                showNotification('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
            }
        });
    });
}

function getColorValue(color) {
    const colors = {
        'red': '#c53030',
        'green': '#007a3e',
        'white': '#ffffff',
        'ornament': '#ffd700'
    };
    return colors[color] || '#000000';
}

function getColorName(color) {
    const names = {
        'red': '–ö—Ä–∞—Å–Ω—ã–π',
        'green': '–ó–µ–ª–µ–Ω—ã–π',
        'white': '–ë–µ–ª—ã–π',
        'ornament': '–û—Ä–Ω–∞–º–µ–Ω—Ç'
    };
    return names[color] || '';
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–≥—Ä—ã —Å —Ñ–ª–∞–≥–æ–º
function checkFlagGame() {
    const targets = document.querySelectorAll('.flag-stripe');
    let correct = 0;
    
    targets.forEach(target => {
        if (target.style.backgroundColor && target.style.backgroundColor !== '') {
            correct++;
        }
    });
    
    if (correct === 4) {
        showNotification('–û—Ç–ª–∏—á–Ω–æ! –§–ª–∞–≥ —Å–æ–±—Ä–∞–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ!', 'success');
    } else {
        showNotification(`–°–æ–±—Ä–∞–Ω–æ ${correct} –∏–∑ 4 —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ!`, 'info');
    }
}

// –ò–≥—Ä–∞ "–ü–∞–º—è—Ç—å"
function initMemoryGame() {
    const memoryCards = [
        { id: 1, name: '–ú–∏–Ω—Å–∫', image: 'üèõÔ∏è' },
        { id: 2, name: '–ú–∏–Ω—Å–∫', image: 'üèõÔ∏è' },
        { id: 3, name: '–ë—Ä–µ—Å—Ç—Å–∫–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å', image: 'üè∞' },
        { id: 4, name: '–ë—Ä–µ—Å—Ç—Å–∫–∞—è –∫—Ä–µ–ø–æ—Å—Ç—å', image: 'üè∞' },
        { id: 5, name: '–ù–µ—Å–≤–∏–∂—Å–∫–∏–π –∑–∞–º–æ–∫', image: 'üèØ' },
        { id: 6, name: '–ù–µ—Å–≤–∏–∂—Å–∫–∏–π –∑–∞–º–æ–∫', image: 'üèØ' },
        { id: 7, name: '–ë–µ–ª–æ–≤–µ–∂—Å–∫–∞—è –ø—É—â–∞', image: 'üå≤' },
        { id: 8, name: '–ë–µ–ª–æ–≤–µ–∂—Å–∫–∞—è –ø—É—â–∞', image: 'üå≤' }
    ];
    
    window.memoryCards = memoryCards;
}

function startMemoryGame() {
    const container = document.querySelector('.memory-cards');
    const cards = [...window.memoryCards];
    
    // –ü–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫–∏
    cards.sort(() => Math.random() - 0.5);
    
    container.innerHTML = '';
    
    cards.forEach((card, index) => {
        const cardElement = document.createElement('div');
        cardElement.className = 'memory-card';
        cardElement.dataset.cardId = card.id;
        cardElement.dataset.index = index;
        cardElement.innerHTML = '‚ùì';
        
        cardElement.addEventListener('click', function() {
            flipCard(this, card);
        });
        
        container.appendChild(cardElement);
    });
    
    window.flippedCards = [];
    window.matchedPairs = 0;
}

function flipCard(cardElement, cardData) {
    if (cardElement.classList.contains('flipped') || cardElement.classList.contains('matched')) {
        return;
    }
    
    cardElement.classList.add('flipped');
    cardElement.innerHTML = cardData.image;
    
    window.flippedCards.push({ element: cardElement, data: cardData });
    
    if (window.flippedCards.length === 2) {
        setTimeout(checkMatch, 1000);
    }
}

function checkMatch() {
    const [card1, card2] = window.flippedCards;
    
    if (card1.data.id === card2.data.id) {
        card1.element.classList.add('matched');
        card2.element.classList.add('matched');
        window.matchedPairs++;
        
        if (window.matchedPairs === 4) {
            showNotification('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—Å–µ –ø–∞—Ä—ã –Ω–∞–π–¥–µ–Ω—ã!', 'success');
        }
    } else {
        card1.element.classList.remove('flipped');
        card2.element.classList.remove('flipped');
        card1.element.innerHTML = '‚ùì';
        card2.element.innerHTML = '‚ùì';
    }
    
    window.flippedCards = [];
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–æ–ª–æ–≤–æ–ª–æ–º–æ–∫
function initPuzzles() {
    initCrossword();
    initAnagram();
}

// –ö—Ä–æ—Å—Å–≤–æ—Ä–¥
function initCrossword() {
    const crosswordGrid = document.querySelector('.crossword-grid');
    const gridSize = 5;
    
    crosswordGrid.innerHTML = '';
    
    for (let i = 0; i < gridSize; i++) {
        for (let j = 0; j < gridSize; j++) {
            const cell = document.createElement('input');
            cell.type = 'text';
            cell.maxLength = 1;
            cell.className = 'crossword-cell';
            cell.dataset.row = i;
            cell.dataset.col = j;
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ —è—á–µ–π–∫–∏ –∞–∫—Ç–∏–≤–Ω—ã
            if ((i === 0 && j >= 0 && j <= 2) || // –ö–û–ù–°–¢–ò–¢–£–¶–ò–Ø (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ)
                (j === 0 && i >= 0 && i <= 2) || // –ü–ê–¢–†–ò–û–¢–ò–ó–ú (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ)
                (i === 2 && j >= 2 && j <= 4) || // –ü–†–ï–ó–ò–î–ï–ù–¢ (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ)
                (j === 2 && i >= 2 && i <= 4)) { // –ú–ò–ù–°–ö (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ)
                cell.classList.add('active');
            } else {
                cell.disabled = true;
                cell.classList.add('disabled');
            }
            
            crosswordGrid.appendChild(cell);
        }
    }
}

function checkCrossword() {
    const cells = document.querySelectorAll('.crossword-cell.active');
    let correct = 0;
    let total = 0;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–≤–æ "–ö–û–ù–°–¢–ò–¢–£–¶–ò–Ø" (–≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ, —Å—Ç—Ä–æ–∫–∞ 0)
    const constitution = ['–ö', '–û', '–ù', '–°', '–¢', '–ò', '–¢', '–£', '–¶', '–ò', '–Ø'];
    for (let i = 0; i < constitution.length; i++) {
        const cell = document.querySelector(`[data-row="0"][data-col="${i}"]`);
        if (cell && cell.value.toUpperCase() === constitution[i]) {
            correct++;
        }
        total++;
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–ª–æ–≤–æ "–ü–ê–¢–†–ò–û–¢–ò–ó–ú" (–≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ, —Å—Ç–æ–ª–±–µ—Ü 0)
    const patriotism = ['–ü', '–ê', '–¢', '–†', '–ò', '–û', '–¢', '–ò', '–ó', '–ú'];
    for (let i = 0; i < patriotism.length; i++) {
        const cell = document.querySelector(`[data-row="${i}"][data-col="0"]`);
        if (cell && cell.value.toUpperCase() === patriotism[i]) {
            correct++;
        }
        total++;
    }
    
    const percentage = Math.round((correct / total) * 100);
    showNotification(`–ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ ${percentage}% –∫—Ä–æ—Å—Å–≤–æ—Ä–¥–∞!`, 'info');
}

// –ê–Ω–∞–≥—Ä–∞–º–º—ã
function initAnagram() {
    const letters = document.querySelectorAll('.anagram-word .letter');
    const input = document.getElementById('anagram-input');
    
    letters.forEach(letter => {
        letter.addEventListener('click', function() {
            const letterText = this.dataset.letter;
            input.value += letterText;
            this.style.opacity = '0.5';
        });
    });
}

function checkAnagram() {
    const input = document.getElementById('anagram-input');
    const word = input.value.toLowerCase();
    
    const correctWords = ['–ø–∞—Ç—Ä–∏–æ—Ç', '–ø–∞—Ç—Ä–∏–æ—Ç–∏–∑–º', '—Ä–æ–¥–∏–Ω–∞', '–±–µ–ª–∞—Ä—É—Å—å'];
    
    if (correctWords.includes(word)) {
        showNotification('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!', 'success');
        input.style.backgroundColor = 'var(--light-green)';
    } else {
        showNotification('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.', 'error');
        input.style.backgroundColor = 'var(--light-red)';
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function initModal() {
    const modal = document.getElementById('quiz-modal');
    const closeBtn = modal.querySelector('.close');
    
    closeBtn.addEventListener('click', function() {
        modal.style.display = 'none';
    });
    
    window.addEventListener('click', function(event) {
        if (event.target === modal) {
            modal.style.display = 'none';
        }
    });
}


// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∏–≥—Ä
const gameStyles = document.createElement('style');
gameStyles.textContent = `
    .quiz-grid, .test-grid, .games-grid, .puzzle-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 20px;
        margin-top: 30px;
    }
    
    .quiz-card, .test-card, .game-card, .puzzle-card {
        background: white;
        border-radius: 8px;
        padding: 20px;
        box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
    }
    
    .quiz-card:hover, .test-card:hover, .game-card:hover, .puzzle-card:hover {
        transform: translateY(-5px);
    }
    
    .quiz-icon, .game-icon {
        width: 60px;
        height: 60px;
        background: linear-gradient(135deg, var(--primary-red), var(--primary-green));
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-bottom: 15px;
    }
    
    .quiz-icon i, .game-icon i {
        font-size: 24px;
        color: white;
    }
    
    .quiz-info {
        display: flex;
        gap: 15px;
        margin: 15px 0;
        font-size: 14px;
        color: #6b7280;
    }
    
    .quiz-info span {
        display: flex;
        align-items: center;
        gap: 5px;
    }
    
    .exercise-nav {
        display: flex;
        gap: 10px;
        margin-bottom: 30px;
        flex-wrap: wrap;
    }
    
    .exercise-nav-btn {
        padding: 10px 20px;
        border: 2px solid #e5e7eb;
        background: white;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .exercise-nav-btn.active {
        background: var(--primary-red);
        color: white;
        border-color: var(--primary-green);
    }
    
    .exercise-nav-btn:hover {
        border-color: var(--primary-green);
    }
    
    .exercise-section {
        display: none;
    }
    
    .exercise-section.active {
        display: block;
    }
    
    .flag-game {
        display: flex;
        gap: 20px;
        margin: 20px 0;
    }
    
    .flag-elements {
        display: flex;
        flex-direction: column;
        gap: 10px;
    }
    
    .flag-element {
        padding: 10px;
        background: #f3f4f6;
        border: 2px dashed #d1d5db;
        border-radius: 8px;
        cursor: move;
        text-align: center;
    }
    
    .flag-element:hover {
        background: #e5e7eb;
    }
    
    .flag-target {
        flex: 1;
    }
    
    .flag-stripes {
        display: flex;
        flex-direction: column;
        gap: 5px;
        height: 200px;
    }
    
    .flag-stripe {
        flex: 1;
        border: 2px dashed #d1d5db;
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: #6b7280;
    }
    
    .memory-game {
        margin: 20px 0;
    }
    
    .memory-cards {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 10px;
        max-width: 400px;
        margin: 0 auto;
    }
    
    .memory-card {
        aspect-ratio: 1;
        background: var(--primary-red);
        color: white;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 24px;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .memory-card:hover {
        background: var(--primary-red);
    }
    
    .memory-card.flipped {
        background: white;
        color: var(--primary-red);
    }
    
    .memory-card.matched {
        background: var(--primary-green);
        color: white;
    }
    
    .crossword {
        margin: 20px 0;
    }
    
    .crossword-grid {
        display: grid;
        grid-template-columns: repeat(5, 1fr);
        gap: 2px;
        max-width: 300px;
        margin: 0 auto 20px;
    }
    
    .crossword-cell {
        width: 50px;
        height: 50px;
        text-align: center;
        border: 1px solid #d1d5db;
        border-radius: 4px;
        font-size: 18px;
        font-weight: bold;
    }
    
    .crossword-cell.active {
        background: white;
    }
    
    .crossword-cell.disabled {
        background: #f3f4f6;
        cursor: not-allowed;
    }
    
    .crossword-clues {
        background: #f9fafb;
        padding: 20px;
        border-radius: 8px;
    }
    
    .clue {
        margin: 10px 0;
        padding: 10px;
        background: white;
        border-radius: 4px;
    }
    
    .anagram-game {
        margin: 20px 0;
    }
    
    .anagram-word {
        display: flex;
        gap: 10px;
        margin: 20px 0;
        justify-content: center;
    }
    
    .letter {
        width: 40px;
        height: 40px;
        background: var(--primary-red);
        color: white;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
    }
    
    .letter:hover {
        background: var(--primary-red);
        transform: scale(1.1);
    }
    
    .anagram-target {
        text-align: center;
    }
    
    .anagram-target input {
        padding: 10px;
        border: 2px solid #d1d5db;
        border-radius: 8px;
        font-size: 16px;
        text-align: center;
        width: 200px;
    }
    
    .quiz-modal-content {
        max-width: 800px;
        width: 90%;
    }
    
    .quiz-question {
        text-align: center;
    }
    
    .question-text {
        font-size: 1.2rem;
        margin: 20px 0;
        color: var(--primary-red);
    }
    
    .answers {
        display: grid;
        gap: 10px;
        margin: 20px 0;
    }
    
    .answer-btn {
        padding: 15px;
        border: 2px solid #e5e7eb;
        background: white;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-align: left;
    }
    
    .answer-btn:hover {
        border-color: var(--primary-green);
        background: #dbeafe;
    }
    
    .quiz-progress {
        margin: 20px 0;
    }
    
    .progress-bar {
        width: 100%;
        height: 8px;
        background: #e5e7eb;
        border-radius: 4px;
        overflow: hidden;
    }
    
    .progress-fill {
        height: 100%;
        background: var(--primary-red);
        transition: width 0.3s ease;
    }
    
    .quiz-results {
        text-align: center;
    }
    
    .score-circle {
        width: 120px;
        height: 120px;
        border-radius: 50%;
        background: linear-gradient(135deg, var(--primary-red), var(--primary-green));
        display: flex;
        align-items: center;
        justify-content: center;
        margin: 20px auto;
    }
    
    .score-number {
        font-size: 2rem;
        font-weight: bold;
        color: white;
    }
    
    .score-message {
        font-size: 1.2rem;
        margin: 20px 0;
        color: var(--primary-red);
    }
    
    .score-details {
        color: #6b7280;
        margin-bottom: 20px;
    }
    
    @media (max-width: 768px) {
        .quiz-grid, .test-grid, .games-grid, .puzzle-grid {
            grid-template-columns: 1fr;
        }
        
        .flag-game {
            flex-direction: column;
        }
        
        .memory-cards {
            grid-template-columns: repeat(3, 1fr);
        }
        
        .crossword-grid {
            grid-template-columns: repeat(4, 1fr);
        }
    }
`;
document.head.appendChild(gameStyles);
